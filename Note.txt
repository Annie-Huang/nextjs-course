Next.js Crash Course for Beginners 2021 - Learn NextJS from Scratch in this 100% Free Tutorial!
(https://www.youtube.com/watch?v=MFuwkrseXVE&t=37s)

https://github.com/mschwarzmueller/nextjs-course-code/tree/9c9e9f19b1bd27605fb4ccdca2d1a0ebb5c3a802
https://github.com/Annie-Huang/nextjs-course

=============================================================================

C:\react>npx create-next-app nextjs-course

http://localhost:3000/
http://localhost:3000/news
http://localhost:3000/new-meetup

TutorialPart1:
--------------------
For http://localhost:3000/something-important, you can have two ways:
- pages/news/something-important.js
- pages/news/something-important/index.js

<a href='/news/nextis-is-a-great-framework'>NextJS Is A Great Framework</a> VS
<Link href='/news/nextis-is-a-great-framework'>NextJS Is A Great Framework<Link>
If you just use <a href='/news/nextjs-is-a-great-framework'>NextJS Is A Great Framework</a>
 Then when you click the link and then refresh the page, it will come back to news\index.js
 It means you don't have a single page app here. It means that we're always sending a new request
 to the backend to fetch a new html page whenever the user navigates around


TutorialPart2:
--------------------
For this structure:
- pages/new-meetup/index.js
- pages/[meetupId]/index.js
When i do http://localhost:3000/new-meetup/, how does it know to go to the first one but not the second one???
It will. Must be some smart way underneath this does this.


UseRouter:
<button onClick={showDetailsHandler}>Show Details</button>
const router = useRouter();
const showDetailsHandler = () => {
router.push('/' + props.id);
};


When you just got this:
  const [loadedMeetups, setLoadedMeetups] = useState([]);
  useEffect(() => {
    // send a http request and fetch data
    setLoadedMeetups(DUMMY_MEETUPS);
  }, []);
  return <MeetupList meetups={loadedMeetups} />;
If you open devtool, you can see the list is empty because the list will only be fetch in the second cycle when the data is fetched from backend.
Next got a solution for this using page pre-rendering.
